# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  defaultsimplejob:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
      AWS_REGION: "ap-northeast-1"
      AMPLIFY_APP_ID: ${{ vars.AMPLIFY_APP_ID }}
      AMPLIFY_ENV_NAME: "main"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_IAM_ROLE_ARN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install npm packages
        run: |
          echo "#install npm packages"
          npm ci
          cd amplify/api && npm ci && cd -
      - name: backend deploy
        run: |
          echo "#amplify gen2 backend deploy"
          npx ampx pipeline-deploy --branch ${{ env.AMPLIFY_ENV_NAME}} --appId ${{ env.AMPLIFY_APP_ID }} --debug
      - name: frontend build and zip
        run: |
          echo "#frontend build and zip"
          npm run build
          cd ./build/client && zip -r ./build.zip * && cd -
      - name: frontend deploy
        run: |
          echo "#create frontend deploy job"
          RESPONSE=$(aws amplify create-deployment --branch-name ${{ env.AMPLIFY_ENV_NAME}} --app-id ${{ env.AMPLIFY_APP_ID }})
          JOB_ID=$(echo $RESPONSE | jq -r '.jobId')
          ZIP_URL=$(echo $RESPONSE | jq -r '.zipUploadUrl') 
          echo "#upload build.zip"
          curl -X PUT -T "./build/client/build.zip" -H "Content-Type: application/zip" "$ZIP_URL"
          echo "#start frontend deploy job"
          aws amplify start-deployment --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name ${{ env.AMPLIFY_ENV_NAME}} --job-id $JOB_ID
